apiVersion: v1
kind: Template
metadata:
  name: grafana-template
  namespace: openshift
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: grafana
    name: grafana
  spec:
    replicas: 1
    selector:
      app: grafana
      deploymentconfig: grafana
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: grafana
          deploymentconfig: grafana
      spec:
        containers:
        - args:
          - --homepath=/usr/share/grafana
          - --config=/etc/grafana/grafana.ini
          command:
          - /usr/sbin/grafana-server
          image: ${GRAFANA_IMAGES_REGISTRY_URL}
          imagePullPolicy: IfNotPresent
          name: grafana
          ports:
          - containerPort: 3000
            protocol: TCP
          resources:
            limits:
              cpu: '1'
              memory: 2Gi
            requests:
              cpu: 512m
              memory: 512Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/grafana
            name: grafana-2
          - mountPath: /var/log/grafana
            name: grafana-3
          - mountPath: /etc/grafana
            name: grafana-conf
        dnsPolicy: ClusterFirst
        nodeSelector:
          region: primary
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: grafana-2
        - emptyDir: {}
          name: grafana-3
        - configMap:
            defaultMode: 420
            name: grafana-conf
          name: grafana-conf
    test: false
    triggers:
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: grafana
    name: grafana
  spec:
    ports:
    - name: 3000-tcp
      port: 3000
      protocol: TCP
      targetPort: 3000
    selector:
      deploymentconfig: grafana
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: grafana
    name: grafana
  spec:
    host: grafana.${SUBDOMAIN}
    port:
      targetPort: 3000-tcp
    to:
      kind: Service
      name: grafana
      weight: 100
    wildcardPolicy: None
- apiVersion: v1
  data:
    grafana.ini: "[paths]\r\ndata = /var/lib/grafana\r\nlogs = /var/log/grafana\r\nplugins
      = /var/lib/grafana/plugins\r\n\r\n[log]\r\nmode = console\r\n\r\n[security]\r\nadmin_user
      = admin\r\nadmin_password = admin\r\n\r\n[auth.anonymous]\r\nenabled = true"
  kind: ConfigMap
  metadata:
    name: grafana-conf
parameters:
- description: "grafana镜像仓库地址"
  displayName: grafana images registry url
  name: GRAFANA_IMAGES_REGISTRY_URL
  required: true
  value: dockerhub.csg.com:5000/m8cloud/grafana:4.4.2
- description: "m8cloud子域名"
  displayName: subdomain
  name: SUBDOMAIN
  required: true
  value: test.com
